from config import (
    MAX_SESSIONS,
    OUTPUT_FOLDER,
    PAGE_DELAY,
    STOP_DATE,
    VERBOSE,
)
from src.downloader import TelechargeurSeancesVD
import logging


def main():
    """Fonction principale."""
    downloader = TelechargeurSeancesVD()

    print("=== T√©l√©chargeur de S√©ances du Conseil d'√âtat VD ===")
    print(f"Dossier de sortie : {OUTPUT_FOLDER}")
    print(f"Fichier de stockage : {downloader.storage.get_file_path()}")
    print(f"Date limite d'arr√™t : {STOP_DATE if STOP_DATE else 'Aucune'}")
    print(f"Nombre maximum de pages : {MAX_SESSIONS}")
    print(f"D√©lai entre les pages : {PAGE_DELAY} seconde(s)")
    print()

    if VERBOSE:
        logging.basicConfig(level=logging.DEBUG)

    result = downloader.scrape_seances()

    if result["success"]:
        print(f"‚úÖ Extraction r√©ussie !")
        print(f"üìä Total des s√©ances stock√©es : {result['stored_seances']}")
        print(f"üÜï Nouvelles s√©ances ajout√©es : {result['new_seances_count']}")
        print(f"üìÑ Pages trait√©es : {result['pages_processed']}")

        if result.get("stop_reached"):
            print(f"üõë Arr√™t anticip√© : date limite ({STOP_DATE}) atteinte")

        if result["new_seances_count"] > 0:
            print(f"\n‚ÑπÔ∏è  {result['new_seances_count']} nouvelles s√©ances ont √©t√© ajout√©es au stockage")
        else:
            print(f"\n‚ÑπÔ∏è  Aucune nouvelle s√©ance ajout√©e")
    else:
        print(f"‚ùå √âchec de l'extraction : {result.get('error', 'Erreur inconnue')}")


if __name__ == "__main__":
    main()
